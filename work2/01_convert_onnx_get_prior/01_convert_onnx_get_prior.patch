diff --git a/convert_onnx.py b/convert_onnx.py
new file mode 100644
index 0000000..7d9098f
--- /dev/null
+++ b/convert_onnx.py
@@ -0,0 +1,54 @@
+from vision.ssd.vgg_ssd import create_vgg_ssd
+from vision.ssd.mobilenetv1_ssd import create_mobilenetv1_ssd
+from vision.ssd.mobilenetv1_ssd_lite import create_mobilenetv1_ssd_lite
+from vision.ssd.squeezenet_ssd_lite import create_squeezenet_ssd_lite
+from vision.ssd.mobilenet_v2_ssd_lite import create_mobilenetv2_ssd_lite
+
+import sys
+import torch.onnx
+from caffe2.python.onnx.backend import Caffe2Backend as c2
+import onnx
+
+
+if len(sys.argv) < 3:
+    print('Usage: python convert_to_caffe2_models.py <net type: mobilenet-v1-ssd|others>  <model path>')
+    sys.exit(0)
+net_type = sys.argv[1]
+model_path = sys.argv[2]
+
+label_path = sys.argv[3]
+
+class_names = [name.strip() for name in open(label_path).readlines()]
+num_classes = len(class_names)
+
+if net_type == 'vgg16-ssd':
+    net = create_vgg_ssd(len(class_names), is_test=True)
+elif net_type == 'mb1-ssd':
+    net = create_mobilenetv1_ssd(len(class_names), is_test=True)
+elif net_type == 'mb1-ssd-lite':
+    net = create_mobilenetv1_ssd_lite(len(class_names), is_test=True)
+elif net_type == 'mb2-ssd-lite':
+    net = create_mobilenetv2_ssd_lite(len(class_names), is_test=True)
+elif net_type == 'sq-ssd-lite':
+    net = create_squeezenet_ssd_lite(len(class_names), is_test=True)
+else:
+    print("The net type is wrong. It should be one of vgg16-ssd, mb1-ssd and mb1-ssd-lite.")
+    sys.exit(1)
+net.load(model_path)
+net.eval()
+
+model_path = f"models/{net_type}.onnx"
+init_net_path = f"models/{net_type}_init_net.pb"
+init_net_txt_path = f"models/{net_type}_init_net.pbtxt"
+predict_net_path = f"models/{net_type}_predict_net.pb"
+predict_net_txt_path = f"models/{net_type}_predict_net.pbtxt"
+
+dummy_input = torch.randn(1, 3, 300, 300, requires_grad=True)
+torch.onnx.export(net, dummy_input, model_path, verbose=False, output_names=['scores', 'boxes'], keep_initializers_as_inputs=True,opset_version=9)
+
+model = onnx.load(model_path)
+print(model.ir_version)
+model.ir_version = 3
+print(model.ir_version)
+onnx.checker.check_model(model)
+onnx.save(model, model_path)
\ No newline at end of file
diff --git a/script.sh b/script.sh
new file mode 100755
index 0000000..0990f15
--- /dev/null
+++ b/script.sh
@@ -0,0 +1 @@
+python convert_onnx.py vgg16-ssd models/vgg16-ssd-mp-0_7726.pth models/voc-model-labels.txt > priors.txt
diff --git a/vision/ssd/ssd.py b/vision/ssd/ssd.py
index 962b9a2..0b3822b 100644
--- a/vision/ssd/ssd.py
+++ b/vision/ssd/ssd.py
@@ -93,7 +93,10 @@ class SSD(nn.Module):
                 locations, self.priors, self.config.center_variance, self.config.size_variance
             )
             boxes = box_utils.center_form_to_corner_form(boxes)
-            return confidences, boxes
+            # return confidences, boxes
+            torch.set_printoptions(profile="full")
+            print(self.priors)
+            return confidences, locations
         else:
             return confidences, locations
 
